import { approve, stop, reject } from '../../services/assapi';
Page({
    app: getApp(),
    data: {
        comment: '',
        oper: '',
        rowData: {
            id: '',
            categoryid: '',
        },
    },
    onAppenfComment(e) {
        const { dataset: { text } } = e.target;
        const { comment } = this.data;
        const newComment = comment.concat(text);
        this.setData({
            comment: newComment,
        });
    },
    onApproveClick() {
        const that = this;
        const { rowData, comment, } = that.data;
        if (rowData) {
            approve({
                approvalId: rowData.id,
                categoryid: rowData.categoryid,
                comment: `${comment} (来自:微信小程序)`,
            }).then((res) => {
                const data = res.data;
                if (res.statusCode === 200) {
                    if (data.status == 200) {
                        wx.navigateBack({
                            delta: 2,
                        });
                    }
                    else {
                        wx.showToast({
                            title: data.errorMessage
                        });
                    }
                }
                else {
                    wx.showToast({
                        title: data.message
                    });
                }
            }).catch((res) => {
                wx.showToast({
                    title: res.message
                });
            });
        }
    },
    onRejectClick() {
        const that = this;
        const { rowData, comment, } = that.data;
        if (rowData) {
            reject({
                approvalId: rowData.id,
                categoryid: rowData.categoryid,
                comment: `${comment} (来自:微信小程序)`,
            }).then((res) => {
                const data = res.data;
                if (res.statusCode === 200) {
                    if (data.status == 200) {
                        wx.navigateBack({
                            delta: 2,
                        });
                    }
                    else {
                        wx.showToast({
                            title: data.errorMessage
                        });
                    }
                }
                else {
                    wx.showToast({
                        title: data.message
                    });
                }
            }).catch((res) => {
                wx.showToast({
                    title: res.message
                });
            });
        }
    },
    onStopClick() {
        const that = this;
        const { rowData, comment, } = that.data;
        if (rowData) {
            stop({
                approvalId: rowData.id,
                categoryid: rowData.categoryid,
                comment: `${comment} (来自:微信小程序)`,
            }).then((res) => {
                const data = res.data;
                if (res.statusCode === 200) {
                    if (data.status == 200) {
                        wx.navigateBack({
                            delta: 2,
                        });
                    }
                    else {
                        wx.showToast({
                            title: data.errorMessage
                        });
                    }
                }
                else {
                    wx.showToast({
                        title: data.message
                    });
                }
            }).catch((res) => {
                wx.showToast({
                    title: res.message
                });
            });
        }
    },
    onLoad: function () {
        const that = this;
        const eventChannel = this.getOpenerEventChannel();
        eventChannel.on('acceptDataFromOpenerPage', function (data) {
            const { rowData, oper } = data;
            that.setData({
                rowData,
                oper,
            });
        });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,