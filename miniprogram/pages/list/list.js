import { wxRequest } from '../../utils/request';
Page({
    app: getApp(),
    data: {
        error: '',
        assList: []
    },
    onSlideButtonTap(e) {
        console.log('slide button tap', e.detail);
    },
    setError(errMsg) {
        this.setData({
            error: errMsg
        });
    },
    onRefreshData() {
        const { app } = this;
        const { token } = app.globalData.accountInfo;
        const that = this;
        wxRequest({
            url: "/ass/asslist/" + token,
        }).then((res) => {
            wx.hideLoading();
            if (res.statusCode == 200) {
                const data = res.data;
                that.setData({
                    assList: data.data
                });
            }
            else {
                that.setError(res.errMsg);
            }
        })
            .catch((res) => {
            that.setError(res.errMsg);
        });
    },
    onCellClick(e) {
        const { dataset: { id, categoryid, operation } } = e.target;
        wx.navigateTo({
            url: '/pages/detail/index',
            success: function (res) {
                res.eventChannel.emit('acceptDataFromOpenerPage', {
                    approvalid: id,
                    categoryid,
                    operation,
                });
            }
        });
    },
    onLoad() {
        this.onRefreshData();
    },
    onPullDownRefresh() {
        this.onRefreshData();
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWhELElBQUksQ0FBQztJQUNILEdBQUcsRUFBRSxNQUFNLEVBQWE7SUFDeEIsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLEVBQUU7UUFDVCxPQUFPLEVBQUUsRUFBRTtLQUNaO0lBRUQsZ0JBQWdCLENBQUMsQ0FBTTtRQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWM7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLEtBQUssRUFBRSxNQUFNO1NBQ2QsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGFBQWE7UUFDWCxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQztRQUM3QyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbEIsU0FBUyxDQUFDO1lBQ1IsR0FBRyxFQUFFLGVBQWUsR0FBRyxLQUFLO1NBQzdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNkLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNqQixJQUFJLEdBQUcsQ0FBQyxVQUFVLElBQUksR0FBRyxFQUFFO2dCQUN6QixNQUFNLElBQUksR0FBUSxHQUFHLENBQUMsSUFBSSxDQUFDO2dCQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSTtpQkFDbkIsQ0FBQyxDQUFBO2FBQ0g7aUJBQ0k7Z0JBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDM0I7UUFDSCxDQUFDLENBQUM7YUFDQyxLQUFLLENBQUMsQ0FBQyxHQUE0QyxFQUFFLEVBQUU7WUFDdEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsV0FBVyxDQUFDLENBQU07UUFDaEIsTUFBTSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzVELEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDWixHQUFHLEVBQUUscUJBQXFCO1lBQzFCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBRXBCLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLDBCQUEwQixFQUFFO29CQUNoRCxVQUFVLEVBQUUsRUFBRTtvQkFDZCxVQUFVO29CQUNWLFNBQVM7aUJBQ1YsQ0FBQyxDQUFBO1lBQ0osQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNO1FBRUosSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBRXZCLENBQUM7SUFFRCxpQkFBaUI7UUFDZixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGxpc3QudHNcbmltcG9ydCB7IHd4UmVxdWVzdCB9IGZyb20gJy4uLy4uL3V0aWxzL3JlcXVlc3QnO1xuXG5QYWdlKHtcbiAgYXBwOiBnZXRBcHA8QnBtT3B0aW9uPigpLFxuICBkYXRhOiB7XG4gICAgZXJyb3I6ICcnLFxuICAgIGFzc0xpc3Q6IFtdXG4gIH0sXG5cbiAgb25TbGlkZUJ1dHRvblRhcChlOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZygnc2xpZGUgYnV0dG9uIHRhcCcsIGUuZGV0YWlsKTtcbiAgfSxcblxuICBzZXRFcnJvcihlcnJNc2c6IHN0cmluZykge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBlcnJvcjogZXJyTXNnXG4gICAgfSk7XG4gIH0sXG5cbiAgb25SZWZyZXNoRGF0YSgpIHtcbiAgICBjb25zdCB7IGFwcCB9ID0gdGhpcztcbiAgICBjb25zdCB7IHRva2VuIH0gPSBhcHAuZ2xvYmFsRGF0YS5hY2NvdW50SW5mbztcbiAgICBjb25zdCB0aGF0ID0gdGhpcztcbiAgICB3eFJlcXVlc3Qoe1xuICAgICAgdXJsOiBcIi9hc3MvYXNzbGlzdC9cIiArIHRva2VuLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgd3guaGlkZUxvYWRpbmcoKTtcbiAgICAgIGlmIChyZXMuc3RhdHVzQ29kZSA9PSAyMDApIHtcbiAgICAgICAgY29uc3QgZGF0YTogYW55ID0gcmVzLmRhdGE7XG4gICAgICAgIHRoYXQuc2V0RGF0YSh7XG4gICAgICAgICAgYXNzTGlzdDogZGF0YS5kYXRhXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhhdC5zZXRFcnJvcihyZXMuZXJyTXNnKTtcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLmNhdGNoKChyZXM6IFdlY2hhdE1pbmlwcm9ncmFtLkdlbmVyYWxDYWxsYmFja1Jlc3VsdCkgPT4ge1xuICAgICAgICB0aGF0LnNldEVycm9yKHJlcy5lcnJNc2cpO1xuICAgICAgfSk7XG4gIH0sXG5cbiAgb25DZWxsQ2xpY2soZTogYW55KSB7XG4gICAgY29uc3QgeyBkYXRhc2V0OiB7IGlkLCBjYXRlZ29yeWlkLCBvcGVyYXRpb24gfSB9ID0gZS50YXJnZXQ7XG4gICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICB1cmw6ICcvcGFnZXMvZGV0YWlsL2luZGV4JyxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgLy8g6YCa6L+HZXZlbnRDaGFubmVs5ZCR6KKr5omT5byA6aG16Z2i5Lyg6YCB5pWw5o2uXG4gICAgICAgIHJlcy5ldmVudENoYW5uZWwuZW1pdCgnYWNjZXB0RGF0YUZyb21PcGVuZXJQYWdlJywge1xuICAgICAgICAgIGFwcHJvdmFsaWQ6IGlkLFxuICAgICAgICAgIGNhdGVnb3J5aWQsXG4gICAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIG9uTG9hZCgpIHtcbiAgICAvLyBjb25zdCB7IGFwcCB9ID0gdGhpcztcbiAgICB0aGlzLm9uUmVmcmVzaERhdGEoKTtcblxuICB9LFxuXG4gIG9uUHVsbERvd25SZWZyZXNoKCkge1xuICAgIHRoaXMub25SZWZyZXNoRGF0YSgpO1xuICB9XG5cbn0pIl19